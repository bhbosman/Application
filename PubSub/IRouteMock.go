// Code generated by MockGen. DO NOT EDIT.
// Source: IRoute.go

// Package PubSub is a generated GoMock package.
package PubSub

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIRoute is a mock of IRoute interface
type MockIRoute struct {
	ctrl     *gomock.Controller
	recorder *MockIRouteMockRecorder
}

// MockIRouteMockRecorder is the mock recorder for MockIRoute
type MockIRouteMockRecorder struct {
	mock *MockIRoute
}

// NewMockIRoute creates a new mock instance
func NewMockIRoute(ctrl *gomock.Controller) *MockIRoute {
	mock := &MockIRoute{ctrl: ctrl}
	mock.recorder = &MockIRouteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRoute) EXPECT() *MockIRouteMockRecorder {
	return m.recorder
}

// Key mocks base method
func (m *MockIRoute) Key() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Key")
	ret0, _ := ret[0].(string)
	return ret0
}

// Key indicates an expected call of Key
func (mr *MockIRouteMockRecorder) Key() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Key", reflect.TypeOf((*MockIRoute)(nil).Key))
}

// ReceiverDescription mocks base method
func (m *MockIRoute) ReceiverDescription() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReceiverDescription")
	ret0, _ := ret[0].(string)
	return ret0
}

// ReceiverDescription indicates an expected call of ReceiverDescription
func (mr *MockIRouteMockRecorder) ReceiverDescription() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReceiverDescription", reflect.TypeOf((*MockIRoute)(nil).ReceiverDescription))
}

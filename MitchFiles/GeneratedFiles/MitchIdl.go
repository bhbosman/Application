// Code generated by goyacc -o idl.go -p IdlExpr idl.y. DO NOT EDIT.
package GeneratedFiles

type Time struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(84)
 	Seconds MitchUInt32
}

type TEventCode byte 
//noinspection ALL
const (
	TEventCode_EndOfDay  = 'C' // default value: byte('C')
 	TEventCode_StartOfDay  = 'O' // default value: byte('O')
 )

type SystemEvent struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(83)
 	Nanosecond MitchUInt32
	EventCode TEventCode
}

type SymbolDirectorySymbolStatus byte 
//noinspection ALL
const (
	SymbolDirectorySymbolStatus_Halted  = 'H' // default value: byte('H')
 	SymbolDirectorySymbolStatus_Suspended  = 'S' // default value: byte('S')
 	SymbolDirectorySymbolStatus_Inactive  = 'a' // default value: byte('a')
 )

type SymbolDirectoryOptionType byte 
//noinspection ALL
const (
	SymbolDirectoryOptionType_CallOption  = 'C' // default value: byte('C')
 	SymbolDirectoryOptionType_PutOption  = 'P' // default value: byte('P')
 )

type SymbolDirectoryFlags struct{
	InverseOrderBook bool // Bit 01
}

type SymbolDirectorySubBook struct{
	Regular bool // Bit 01
	OffBook bool // Bit 02
	BulletinBoard bool // Bit 06
	NegotiatedTrades bool // Bit 07
}

type SymbolDirectorySettlementMethod byte 
//noinspection ALL
const (
	SymbolDirectorySettlementMethod_Cash  = 'C' // default value: byte('C')
 	SymbolDirectorySettlementMethod_Physical  = 'P' // default value: byte('P')
 )

type SymbolDirectory struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(82)
 	Nanosecond MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	SymbolStatus SymbolDirectorySymbolStatus
	ISIN MitchAlpha012
	Symbol MitchAlpha025
	TIDM MitchAlpha012
	Segment MitchAlpha006
	PreviousClosePrice MitchPrice08
	ExpirationDate MitchDate
	Underlying MitchAlpha025
	StrikePrice MitchPrice08
	OptionType SymbolDirectoryOptionType
	Issuer MitchAlpha006
	IssueDate MitchDate
	Coupon MitchPrice08
	Flags SymbolDirectoryFlags
	SubBook SymbolDirectorySubBook
	CorporateAction MitchAlpha189
	Leg1Symbol MitchAlpha025
	Leg2Symbol MitchAlpha025
	ContractMultiplier MitchPrice08
	SettlementMethod SymbolDirectorySettlementMethod
	InstrumentSubCategory MitchAlpha030
}

type SymbolStatusTradingStatus byte 
//noinspection ALL
const (
	SymbolStatusTradingStatus_Halt  = 'H' // default value: byte('H')
 	SymbolStatusTradingStatus_RegularTrading  = 'T' // default value: byte('T')
 	SymbolStatusTradingStatus_OpeningAuctionCall  = 'a' // default value: byte('a')
 	SymbolStatusTradingStatus_PostClose  = 'b' // default value: byte('b')
 	SymbolStatusTradingStatus_MarketClose  = 'c' // default value: byte('c')
 	SymbolStatusTradingStatus_ClosingAuctionCall  = 'd' // default value: byte('d')
 	SymbolStatusTradingStatus_VolatilityAuctionCall  = 'e' // default value: byte('e')
 	SymbolStatusTradingStatus_EODVolumeAuctionCall  = 'E' // default value: byte('E')
 	SymbolStatusTradingStatus_ReOpeningAuctionCall  = 'f' // default value: byte('f')
 	SymbolStatusTradingStatus_Pause  = 'l' // default value: byte('l')
 	SymbolStatusTradingStatus_FuturesCloseOut  = 'p' // default value: byte('p')
 	SymbolStatusTradingStatus_ClosingPriceCross  = 's' // default value: byte('s')
 	SymbolStatusTradingStatus_IntraDayAuctionCall  = 'u' // default value: byte('u')
 	SymbolStatusTradingStatus_EndTradeReporting  = 'v' // default value: byte('v')
 	SymbolStatusTradingStatus_NoActiveSession  = 'w' // default value: byte('w')
 	SymbolStatusTradingStatus_EndOfPostClose  = 'x' // default value: byte('x')
 	SymbolStatusTradingStatus_StarOofTrading  = 'y' // default value: byte('y')
 	SymbolStatusTradingStatus_ClosingPricePublication  = 'z' // default value: byte('z')
 )

type SymbolStatusSessionChangeReason byte 
//noinspection ALL
const (
	SymbolStatusSessionChangeReason_ScheduledTransition  = 0 // default value: byte(0)
 	SymbolStatusSessionChangeReason_ExtendedByMarketOps  = 1 // default value: byte(1)
 	SymbolStatusSessionChangeReason_ShortenedByMarketOps  = 2 // default value: byte(2)
 	SymbolStatusSessionChangeReason_MarketOrderImbalance  = 3 // default value: byte(3)
 	SymbolStatusSessionChangeReason_PriceOutsideRange  = 4 // default value: byte(4)
 	SymbolStatusSessionChangeReason_CircuitBreakerTripped  = 5 // default value: byte(5)
 	SymbolStatusSessionChangeReason_Unavailable  = 9 // default value: byte(9)
 )

type SymbolStatusBookType byte 
//noinspection ALL
const (
	SymbolStatusBookType_OnBook  = 1 // default value: byte(1)
 	SymbolStatusBookType_OffBook  = 2 // default value: byte(2)
 	SymbolStatusBookType_BulletinBoard  = 9 // default value: byte(9)
 	SymbolStatusBookType_NegotiatedTrades  = 11 // default value: byte(11)
 )

type SymbolStatus struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(72)
 	Nanosecond MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	TradingStatus SymbolStatusTradingStatus
	Flags MitchBitField
	Reason MitchAlpha004
	SessionChangeReason SymbolStatusSessionChangeReason
	NewEndTime MitchTime
	BookType SymbolStatusBookType
}

type OrderSide byte 
//noinspection ALL
const (
	OrderSide_BuyOrder  = 'B' // default value: byte('B')
 	OrderSide_SellOrder  = 'S' // default value: byte('S')
 )

type AddOrderFlags struct{
	MarketOrder bool // Bit 05
	BulletinBoard bool // Bit 06
}

type AddOrder struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(65)
 	Nanosecond MitchUInt32
	OrderId MitchUInt64
	Side OrderSide
	Quantity MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	Price MitchPrice08
	Flags AddOrderFlags
}

type AddAttributedOrderFlags struct{
	Regular bool // Bit 01
	BulletinBoard bool // Bit 06
}

type AddAttributedOrder struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(70)
 	Nanosecond MitchUInt32
	OrderID MitchUInt64
	Side OrderSide
	Quantity MitchUInt32
	InstrumentID MitchUInt32
	Price MitchPrice08
	Attribution MitchAlpha011
	Flags AddAttributedOrderFlags
}

type OrderDeleted struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(68)
 	Nanosecond MitchUInt32
	OrderID MitchUInt64
}

type OrderModifiedFlags struct{
	PriorityFlag bool // Bit 01
}

type OrderModified struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(85)
 	Nanosecond MitchUInt32
	OrderID MitchUInt64
	NewQuantity MitchUInt32
	NewPrice MitchPrice08
	Flags OrderModifiedFlags
}

type OrderBookClearSubBook byte 
//noinspection ALL
const (
	OrderBookClearSubBook_OnBook  = 1 // default value: byte(1)
 	OrderBookClearSubBook_OffBook  = 2 // default value: byte(2)
 	OrderBookClearSubBook_BulletinBoard  = 9 // default value: byte(9)
 	OrderBookClearSubBook_NegotiatedTrades  = 11 // default value: byte(11)
 )

type OrderBookClearBookType byte 
//noinspection ALL
const (
	OrderBookClearBookType_MBO  = 0 // default value: byte(0)
 	OrderBookClearBookType_TopOfBook  = 1 // default value: byte(1)
 )

type OrderBookClear struct {
	Length MitchUInt16
	MessageType MitchByte // default value: int64(121)
 	Nanosecond MitchUInt32
	InstrumentID MitchUInt32
	SubBook OrderBookClearSubBook
	BookType OrderBookClearBookType
}

type OrderExecuted struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	OrderID MitchUInt64
	ExecutedQuantity MitchUInt32
	TradeID MitchUInt64
	LastOptPx MitchPrice08
	Volatility MitchPrice08
	UnderlyingReferencePrice MitchPrice08
}

type OrderExecutedWithPriceSize struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	OrderID MitchUInt64
	ExecutedQuantity MitchUInt32
	DisplayQuantity MitchUInt32
	TradeID MitchUInt64
	Printable MitchByte
	Price MitchPrice08
	LastOptPx MitchPrice08
	Volatility MitchPrice08
	UnderlyingReferencePrice MitchPrice08
}

type Trade struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	ExecutedQuantity MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	Price MitchPrice08
	TradeID MitchUInt64
	SubBook MitchUInt08
	Flags MitchBitField
	TradeSubType MitchAlpha006
	LastOptPx MitchPrice08
	Volatility MitchPrice08
	UnderlyingReferencePrice MitchPrice08
}

type AuctionTrade struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	Quantity MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	Price MitchPrice08
	TradeID MitchUInt64
	AuctionType MitchByte
	LastOptPx MitchPrice08
	Volatility MitchPrice08
	UnderlyingReferencePrice MitchPrice08
}

type OffBookTrade struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	ExecutedQuantity MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	Price MitchPrice08
	TradeID MitchUInt64
	OffBookTradeType MitchAlpha006
	TradeTime MitchTime
	TradeDate MitchDate
	LastOptPx MitchPrice08
	Volatility MitchPrice08
	UnderlyingReferencePrice MitchPrice08
}

type TradeBreak struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	TradeID MitchUInt64
	TradeType MitchByte
}

type RecoveryTrade struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	ExecutedQuantity MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	Price MitchPrice08
	TradeID MitchUInt64
	AuctionType MitchByte
	OffBookRFQTradeType MitchAlpha006
	TradeTime MitchTime
	TradeDate MitchDate
	ActionType MitchByte
	SubBook MitchUInt08
	Flags MitchBitField
	LastOptPx MitchPrice08
	Volatility MitchPrice08
	UnderlyingReferencePrice MitchPrice08
}

type AuctionInfo struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	PairedQuantity MitchUInt32
	Reserved01 MitchUInt32
	ImbalanceDirection MitchByte
	InstrumentID MitchUInt32
	Reserved02 MitchByte
	Reserved03 MitchByte
	Price MitchPrice08
	AuctionType MitchByte
}

type Statistics struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	InstrumentID MitchUInt32
	Reserved01 MitchByte
	Reserved02 MitchByte
	StatisticType MitchAlpha006
	Price MitchPrice08
	OpenCloseIndicator MitchAlpha006
	SubBook MitchUInt08
}

type ExtendedStatistics struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	InstrumentID MitchUInt32
	HighPrice MitchPrice08
	LowPrice MitchPrice08
	VWAP MitchPrice08
	Volume MitchUInt32
	Turnover MitchPrice04
	NumberofTrades MitchUInt32
	Reserved01 MitchAlpha001
	SubBook MitchUInt08
	NotionalExposure MitchPrice08
	NotionalDeltaExposure MitchPrice08
	OpenInterest MitchPrice08
}

type News struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	Time MitchTime
	Urgency MitchByte
	Headline MitchAlpha001
	Text MitchAlpha001
	Instruments MitchAlpha001
	Underlyings MitchAlpha001
}

type TopOfBook struct {
	Length MitchUInt16
	MessageType MitchByte
	Nanosecond MitchUInt32
	instrumentID MitchUInt32
	ReserveField MitchUInt16
	SubBook MitchBitField
	Action MitchByte
	Side MitchByte
	Price MitchPrice08
	Quantity MitchUInt32
	MarketOrderQuantity MitchUInt32
	Reserved01 MitchUInt32
	Reserved02 MitchUInt32
}


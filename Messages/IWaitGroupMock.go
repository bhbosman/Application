// Code generated by MockGen. DO NOT EDIT.
// Source: IWaitGroup.go

// Package Messages is a generated GoMock package.
package Messages

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIWaitGroup is a mock of IWaitGroup interface
type MockIWaitGroup struct {
	ctrl     *gomock.Controller
	recorder *MockIWaitGroupMockRecorder
}

// MockIWaitGroupMockRecorder is the mock recorder for MockIWaitGroup
type MockIWaitGroupMockRecorder struct {
	mock *MockIWaitGroup
}

// NewMockIWaitGroup creates a new mock instance
func NewMockIWaitGroup(ctrl *gomock.Controller) *MockIWaitGroup {
	mock := &MockIWaitGroup{ctrl: ctrl}
	mock.recorder = &MockIWaitGroupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIWaitGroup) EXPECT() *MockIWaitGroupMockRecorder {
	return m.recorder
}

// AddOne mocks base method
func (m *MockIWaitGroup) AddOne() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddOne")
	ret0, _ := ret[0].(error)
	return ret0
}

// AddOne indicates an expected call of AddOne
func (mr *MockIWaitGroupMockRecorder) AddOne() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOne", reflect.TypeOf((*MockIWaitGroup)(nil).AddOne))
}

// Done mocks base method
func (m *MockIWaitGroup) Done() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Done")
	ret0, _ := ret[0].(error)
	return ret0
}

// Done indicates an expected call of Done
func (mr *MockIWaitGroupMockRecorder) Done() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Done", reflect.TypeOf((*MockIWaitGroup)(nil).Done))
}
